# Basic syntax: <prefix>.(source|sink).<instance>.<option>
*.period=5

# Filter configuration
*.source.filter.class=com.pinganfu.owl.metrics.filter.GlobFilter
*.record.filter.class=${*.source.filter.class}
*.metric.filter.class=${*.source.filter.class}

# Filter out any sources with names end with Details
#<prefix>.*.source.filter.exclude=*Details

# Filter out records with names that matches foo* in the source named "rpc"
#<prefix>.source.rpc.record.filter.exclude=foo*

# Filter out metrics with names that matches foo* for sink instance "file" only
#<prefix>.sink.file.metric.filter.exclude=foo*
#<prefix>.sink.file.filename=jt-metrics.out

# Sink configuration
test.sink.*.class=com.pinganfu.owl.metrics.sink.FileSink
# context that means group
test.sink.file0.context=jvm,context1
test.sink.file0.context.filter.excluded=metricssystem,test,test1
#test.sink.ms.context=metricssystem
#test.sink.file1.context=jvm
#test.sink.file1.filename=jvm.out

# Sink plugin of Owl log appender
#test.sink.log.class=com.pinganfu.owl.metrics.sink.OwlLogSink
#test.sink.log.context=jvm
#test.sink.log.appender=owl


# Custom sink plugin
#<prefix>.sink.<instance>.class=com.example.metrics.MyPlugin
# MyPlugin only handles metrics in "foo" context
#<prefix>.sink.<instance>.context=foo
#for example as below:
#test.sink.sink1.class=com.pinganfu.owl.metrics.demo.MetricsSinkCustom

#*.sink.file.context=all
#hdfs.sink.file.context=abc